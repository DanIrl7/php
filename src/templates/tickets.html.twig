<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tickets - Ticket Management App</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Arial', sans-serif;
            background-color: #f5f5f5;
            color: #333;
            line-height: 1.6;
        }

        .container {
            max-width: 1440px;
            margin: 0 auto;
            padding: 0 20px;
        }

        /* Header */
        header {
            background: white;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            padding: 20px 0;
        }

        .header-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .logo {
            font-size: 1.5rem;
            font-weight: bold;
        }

        .logout-btn {
            background-color: #e74c3c;
            color: white;
            padding: 8px 16px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        /* Main Content */
        main {
            padding: 40px 0;
        }

        .ticket-actions {
            display: flex;
            justify-content: space-between;
            margin-bottom: 30px;
        }

        .create-ticket-btn {
            background-color: #6e8efb;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        .ticket-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
        }

        .ticket-card {
            background: white;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        }

        .ticket-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }

        .ticket-title {
            font-weight: bold;
            font-size: 1.1rem;
        }

        .ticket-status {
            padding: 4px 8px;
            border-radius: 12px;
            font-size: 0.8rem;
            font-weight: 600;
        }

        .status-open {
            background-color: #e8f5e9;
            color: #2e7d32;
        }

        .status-in-progress {
            background-color: #fff3e0;
            color: #ff8f00;
        }

        .status-closed {
            background-color: #f5f5f5;
            color: #616161;
        }

        .ticket-description {
            color: #666;
            margin-bottom: 15px;
            font-size: 0.9rem;
        }

        .ticket-actions {
            display: flex;
            gap: 10px;
        }

        .edit-btn, .delete-btn {
            padding: 6px 12px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 0.8rem;
        }

        .edit-btn {
            background-color: #6e8efb;
            color: white;
        }

        .delete-btn {
            background-color: #e74c3c;
            color: white;
        }

        /* Modal Styles */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
            z-index: 1000;
            justify-content: center;
            align-items: center;
        }

        .modal-content {
            background: white;
            padding: 30px;
            border-radius: 8px;
            width: 100%;
            max-width: 500px;
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .modal-title {
            font-size: 1.3rem;
            font-weight: bold;
        }

        .close-btn {
            background: none;
            border: none;
            font-size: 1.5rem;
            cursor: pointer;
        }

        .form-group {
            margin-bottom: 15px;
        }

        .form-group label {
            display: block;
            margin-bottom: 5px;
            font-weight: 600;
        }

        .form-group input,
        .form-group select,
        .form-group textarea {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 1rem;
        }

        .form-group textarea {
            min-height: 100px;
            resize: vertical;
        }

        .modal-footer {
            display: flex;
            justify-content: flex-end;
            gap: 10px;
            margin-top: 20px;
        }

        .save-btn {
            background-color: #6e8efb;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        .cancel-btn {
            background-color: #ccc;
            color: #333;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        /* Toast Notification */
        .toast {
            position: fixed;
            top: 20px;
            right: 20px;
            background: #333;
            color: white;
            padding: 12px 20px;
            border-radius: 4px;
            display: none;
            z-index: 1000;
        }
    </style>
</head>
<body>
    <header>
        <div class="container">
            <div class="header-content">
                <div class="logo">TicketApp</div>
                <button class="logout-btn" id="logoutBtn">Logout</button>
            </div>
        </div>
    </header>

    <main>
        <div class="container">
            <div class="ticket-actions">
                <h1>Ticket Management</h1>
                <button class="create-ticket-btn" id="createTicketBtn">Create Ticket</button>
            </div>

            <div class="ticket-grid" id="ticketGrid">
                <!-- Tickets will be loaded here -->
            </div>
        </div>
    </main>

    <!-- Create/Edit Ticket Modal -->
    <div class="modal" id="ticketModal">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title" id="modalTitle">Create Ticket</h2>
                <button class="close-btn" id="closeModalBtn">&times;</button>
            </div>
            <form id="ticketForm">
                <input type="hidden" id="ticketId">
                <div class="form-group">
                    <label for="title">Title</label>
                    <input type="text" id="title" name="title" required>
                    <div class="error-message" id="title-error">Title is required</div>
                </div>
                <div class="form-group">
                    <label for="description">Description</label>
                    <textarea id="description" name="description"></textarea>
                </div>
                <div class="form-group">
                    <label for="status">Status</label>
                    <select id="status" name="status" required>
                        <option value="open">Open</option>
                        <option value="in_progress">In Progress</option>
                        <option value="closed">Closed</option>
                    </select>
                </div>
                <div class="modal-footer">
                    <button type="button" class="cancel-btn" id="cancelBtn">Cancel</button>
                    <button type="submit" class="save-btn" id="saveBtn">Save</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Confirmation Modal -->
    <div class="modal" id="confirmModal">
        <div class="modal-content">
            <h2>Confirm Deletion</h2>
            <p>Are you sure you want to delete this ticket?</p>
            <div class="modal-footer">
                <button class="cancel-btn" id="cancelDeleteBtn">Cancel</button>
                <button class="delete-btn" id="confirmDeleteBtn">Delete</button>
            </div>
        </div>
    </div>

    <!-- Toast Notification -->
    <div class="toast" id="toast"></div>

    <script>
        // Check authentication
        if (!localStorage.getItem('ticketapp_session')) {
            window.location.href = '/auth/login';
        }

        // Logout functionality
        document.getElementById('logoutBtn').addEventListener('click', function() {
            localStorage.removeItem('ticketapp_session');
            window.location.href = '/';
        });

        // Ticket data
        let tickets = JSON.parse(localStorage.getItem('tickets')) || [];
        let currentTicketId = null;

        // DOM Elements
        const ticketGrid = document.getElementById('ticketGrid');
        const createTicketBtn = document.getElementById('createTicketBtn');
        const ticketModal = document.getElementById('ticketModal');
        const confirmModal = document.getElementById('confirmModal');
        const closeModalBtn = document.getElementById('closeModalBtn');
        const cancelBtn = document.getElementById('cancelBtn');
        const cancelDeleteBtn = document.getElementById('cancelDeleteBtn');
        const ticketForm = document.getElementById('ticketForm');
        const toast = document.getElementById('toast');

        // Event Listeners
        createTicketBtn.addEventListener('click', openCreateModal);
        closeModalBtn.addEventListener('click', closeModal);
        cancelBtn.addEventListener('click', closeModal);
        cancelDeleteBtn.addEventListener('click', closeConfirmModal);
        ticketForm.addEventListener('submit', saveTicket);

        // Functions
        function renderTickets() {
            ticketGrid.innerHTML = '';
            tickets.forEach(ticket => {
                const ticketCard = document.createElement('div');
                ticketCard.className = 'ticket-card';
                ticketCard.innerHTML = `
                    <div class="ticket-header">
                        <div class="ticket-title">${ticket.title}</div>
                        <div class="ticket-status ${getStatusClass(ticket.status)}">${formatStatus(ticket.status)}</div>
                    </div>
                    <div class="ticket-description">${ticket.description || 'No description'}</div>
                    <div class="ticket-actions">
                        <button class="edit-btn" data-id="${ticket.id}">Edit</button>
                        <button class="delete-btn" data-id="${ticket.id}">Delete</button>
                    </div>
                `;
                ticketGrid.appendChild(ticketCard);
            });

            // Add event listeners to edit and delete buttons
            document.querySelectorAll('.edit-btn').forEach(btn => {
                btn.addEventListener('click', () => openEditModal(btn.dataset.id));
            });

            document.querySelectorAll('.delete-btn').forEach(btn => {
                btn.addEventListener('click', () => openConfirmModal(btn.dataset.id));
            });
        }

        function getStatusClass(status) {
            switch(status) {
                case 'open': return 'status-open';
                case 'in_progress': return 'status-in-progress';
                case 'closed': return 'status-closed';
                default: return '';
            }
        }

        function formatStatus(status) {
            return status.replace('_', ' ');
        }

        function openCreateModal() {
            document.getElementById('modalTitle').textContent = 'Create Ticket';
            document.getElementById('ticketId').value = '';
            document.getElementById('title').value = '';
            document.getElementById('description').value = '';
            document.getElementById('status').value = 'open';
            ticketModal.style.display = 'flex';
        }

        function openEditModal(id) {
            const ticket = tickets.find(t => t.id === id);
            if (ticket) {
                document.getElementById('modalTitle').textContent = 'Edit Ticket';
                document.getElementById('ticketId').value = ticket.id;
                document.getElementById('title').value = ticket.title;
                document.getElementById('description').value = ticket.description || '';
                document.getElementById('status').value = ticket.status;
                currentTicketId = id;
                ticketModal.style.display = 'flex';
            }
        }

        function closeModal() {
            ticketModal.style.display = 'none';
        }

        function openConfirmModal(id) {
            currentTicketId = id;
            confirmModal.style.display = 'flex';
        }

        function closeConfirmModal() {
            confirmModal.style.display = 'none';
        }

        function saveTicket(e) {
            e.preventDefault();

            // Validate form
            const title = document.getElementById('title').value;
            if (!title) {
                document.getElementById('title-error').style.display = 'block';
                return;
            }

            // Get form values
            const id = document.getElementById('ticketId').value;
            const description = document.getElementById('description').value;
            const status = document.getElementById('status').value;

            // Create or update ticket
            if (id) {
                // Update existing ticket
                const index = tickets.findIndex(t => t.id === id);
                if (index !== -1) {
                    tickets[index] = { id, title, description, status };
                }
            } else {
                // Create new ticket
                const newTicket = {
                    id: Date.now().toString(),
                    title,
                    description,
                    status
                };
                tickets.push(newTicket);
            }

            // Save to localStorage
            localStorage.setItem('tickets', JSON.stringify(tickets));

            // Close modal and refresh
            closeModal();
            renderTickets();

            // Show success message
            showToast('Ticket saved successfully!');
        }

        function deleteTicket() {
            if (currentTicketId) {
                tickets = tickets.filter(t => t.id !== currentTicketId);
                localStorage.setItem('tickets', JSON.stringify(tickets));
                closeConfirmModal();
                renderTickets();
                showToast('Ticket deleted successfully!');
            }
        }

        function showToast(message) {
            toast.textContent = message;
            toast.style.display = 'block';
            setTimeout(() => {
                toast.style.display = 'none';
            }, 3000);
        }

        // Initialize
        renderTickets();

        // Add event listener for delete confirmation
        document.getElementById('confirmDeleteBtn').addEventListener('click', deleteTicket);
    </script>
</body>
</html>